openapi: 3.0.0
info:
  description: |
    The Todo API manages a list of todo items as described by the TodoMVC backend project: http://todobackend.com
  title: Todo API
  version: 1.0.0
servers:
- url: https://todo.api/todos
- url: http://todo.api/todos
- url: http://localhost:8080/todos
paths:
  /todos:
    delete:
      operationId: deleteItems
      responses:
        "204":
          description: Items were deleted successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete all items
    get:
      operationId: listItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
          description: A list of items
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: List items
    post:
      operationId: addItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItemRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Item was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request did not pass the business validation rules
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Add a new item to the list
  /todos/{id}:
    delete:
      operationId: deleteItem
      parameters:
      - description: Item ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Item was successfully deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Delete an item
    get:
      operationId: getItem
      parameters:
      - description: Item ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: An item
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource cannot be found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Get an item
    patch:
      operationId: updateItem
      parameters:
      - description: Item ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Item was successfully updated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource cannot be found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Update an existing item
  /todos/{id}/complete:
    patch:
      operationId: markAsComplete
      parameters:
      - description: Item ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Item was successfully marked as complete
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource cannot be found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Mark a item as complete
components:
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    ValidationError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request did not pass the business validation rules
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The resource cannot be found
  schemas:
    Error:
      example:
        type: about:blank
        title: Not Found
        status: 404
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
      required:
      - type
      type: object
    AddItemRequest:
      example:
        title: title
        order: 0
      properties:
        title:
          type: string
        order:
          type: integer
      required:
      - order
      - title
      type: object
    Item:
      example:
        id: id
        completed: true
        title: title
        url: https://openapi-generator.tech
        order: 0
      properties:
        id:
          type: string
        title:
          type: string
        completed:
          type: boolean
        order:
          type: integer
        url:
          format: uri
          type: string
      required:
      - completed
      - id
      - order
      - title
      - url
      type: object
    Items:
      items:
        $ref: '#/components/schemas/Item'
      type: array
    UpdateItemRequest:
      example:
        completed: true
        title: title
        order: 0
      properties:
        title:
          nullable: true
          type: string
        completed:
          nullable: true
          type: boolean
        order:
          nullable: true
          type: integer
      type: object
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
