openapi: 3.0.0
info:
  description: Manage TODOs
  title: Todo API
  version: 1.0.0
servers:
- url: https://todo.api/
- url: http://todo.api/
paths:
  /todos:
    delete:
      operationId: deleteAllItems
      responses:
        "204":
          description: successful operation
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Delete all items
      tags:
      - todos
    get:
      operationId: listTodos
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
          description: created
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: List TODOs
    post:
      operationId: createTodo
      requestBody:
        $ref: '#/components/requestBodies/CreateTodoRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Add a new TODO to the list
  /todos/{id}:
    delete:
      operationId: deleteItem
      parameters:
      - description: Numeric ID of the TODO
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: successful operation
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Delete an item
      tags:
      - todos
    get:
      operationId: getItem
      parameters:
      - description: Numeric ID of the TODO
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Get an item
      tags:
      - todos
    patch:
      operationId: updateItem
      parameters:
      - description: Numeric ID of the TODO
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateTodoRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Update an item
      tags:
      - todos
  /todos/{id}/complete:
    patch:
      operationId: markAsComplete
      parameters:
      - description: Numeric ID of the TODO
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTodoResponse'
          description: successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: unexpected error
      summary: Mark a TODO as complete
components:
  requestBodies:
    CreateTodoRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTodoRequest'
      required: true
    UpdateTodoRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTodoRequest'
      required: true
  schemas:
    Todo:
      example:
        id: id
        completed: true
        title: title
        url: https://openapi-generator.tech
        order: 0
      properties:
        id:
          type: string
        title:
          type: string
        completed:
          type: boolean
        order:
          type: integer
        url:
          format: uri
          type: string
      required:
      - completed
      - id
      - order
      - title
      - url
      type: object
    TodoList:
      items:
        $ref: '#/components/schemas/Todo'
      type: array
    CreateTodoRequest:
      example:
        title: title
        order: 0
      properties:
        title:
          type: string
        order:
          type: integer
      required:
      - order
      - title
      type: object
    CreateTodoResponse:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    UpdateTodoRequest:
      example:
        completed: true
        title: title
        order: 0
      properties:
        title:
          nullable: true
          type: string
        completed:
          nullable: true
          type: boolean
        order:
          nullable: true
          type: integer
      type: object
    GenericError:
      example:
        type: about:blank
        title: Not Found
        status: 404
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
      required:
      - type
      type: object
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
