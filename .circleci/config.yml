version: 2.1

executors:
    go:
        parameters:
            build_image:
                type: string
                default: "circleci/golang"
                description: Go build image
            go_version:
                type: string
                default: "1.12"
                description: Go build image version
        docker:
            -   image: << parameters.build_image >>:<< parameters.go_version >>
                environment:
                    GOFLAGS: -mod=readonly
                    GOPROXY: https://proxy.golang.org

commands:
    restore_build_cache:
        description: Restore build cache
        steps:
            -   restore_cache:
                    name: Restore build dependencies
                    keys:
                        - build-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}

    save_build_cache:
        description: Save build cache
        steps:
            -   save_cache:
                    name: Save build dependencies
                    key: build-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}
                    paths:
                        - bin/

jobs:
    unit-tests:
        executor: go

        steps:
            - checkout
            - restore_build_cache

            -   run:
                    name: Run tests
                    command: |
                        if [ $CIRCLE_NODE_TOTAL -gt 1 ]; then
                            export TEST_PKGS=$(echo `go list ./... | circleci tests split`)
                            export TEST_REPORT_NAME=results_${CIRCLE_NODE_INDEX}.xml
                        fi

                        make test

            - save_build_cache

            -   store_test_results:
                    path: build/test_results/

    integration-tests:
        executor: go

        steps:
            - checkout
            - restore_build_cache

            -   run:
                    name: Run integration tests
                    command: |
                        if [ $CIRCLE_NODE_TOTAL -gt 1 ]; then
                            export TEST_PKGS=$(echo `go list ./... | circleci tests split`)
                            export TEST_REPORT_NAME=results_${CIRCLE_NODE_INDEX}.xml
                        fi

                        make test-integration

            - save_build_cache

            -   store_test_results:
                    path: build/test_results/

    lint:
        executor: go

        steps:
            - checkout
            - restore_build_cache

            -   run:
                    name: Run linter
                    command: make lint

            - save_build_cache

workflows:
    version: 2
    build:
        jobs:
            - unit-tests
            - integration-tests
            - lint
