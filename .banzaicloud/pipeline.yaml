workspace:
  base: /cicd

pipeline:
  create_cluster:
    image: banzaicloud/ci-pipeline-client:0.11
    action: EnsureCluster

  test:
    image: golang:1.12
    commands: make check
    environment:
      GOFLAGS: -mod=readonly

  build_image:
    image: plugins/docker
    dockerfile: Dockerfile
    repo: '{{ .CICD_REPO }}'
    tags: '{{ trunc 7 .CICD_COMMIT_SHA }}'
    secretFrom:
      DOCKER_USERNAME:
        # name:
        keyRef: username
      DOCKER_PASSWORD:
        # name:
        keyRef: password

  package_application:
    when:
      branch:
        include: [master]
    image: lachlanevenson/k8s-helm:latest
    commands:
      - helm init -c
      - helm repo add banzaicloud-stable http://kubernetes-charts.banzaicloud.com/branch/master
      - helm package ./.banzaicloud/charts/spotguide-modern-go-application

  install_mysql_user_credentials_secret:
    when:
      branch:
        include: [master]
    image: banzaicloud/ci-pipeline-client:0.11
    action: InstallSecret
    clusterSecret:
      name: '{{ .CICD_REPO_NAME }}-mysql-user'
      # sourceSecretName:
      # namespace:
      merge: true
      spec:
        - name: mysql-username
          source: username
        - name: mysql-password
          source: password

  {{{{- if .pipeline.install_mysql_root_password_secret.clusterSecret.sourceSecretName }}}}
  install_mysql_root_password_secret:
    when:
      branch:
        include: [master]
    image: banzaicloud/ci-pipeline-client:0.11
    action: InstallSecret
    clusterSecret:
      name: '{{ .CICD_REPO_NAME }}-mysql-root-password'
      # sourceSecretName:
      # namespace:
      merge: true
      spec:
        - name: mysql-root-password
          source: password
  {{{{- end }}}}

  deploy_application:
    when:
      branch:
        include: [master]
    image: banzaicloud/ci-pipeline-client:0.11
    action: EnsureDeployment
    deployment:
      name: './spotguide-modern-go-application-0.3.0.tgz'
      # namespace:
      reuseValues: true
      releaseName: '{{ .CICD_REPO_NAME }}'
      wait: true
      timeout: 900
      values:
        nameOverride: '{{ .CICD_REPO_NAME }}'
        application:
          image:
            repository: '{{ .CICD_REPO }}'
            tag: '{{ trunc 7 .CICD_COMMIT_SHA }}'
            pullPolicy: Always
          config:
            instrumentation:
              prometheus:
                enabled: true
          {{{{- if .platform.AutoDNSEnabled }}}}
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/redirect-regex: ^http://(.*)
              traefik.ingress.kubernetes.io/redirect-replacement: https://$1
              traefik.ingress.kubernetes.io/redirect-permanent: "true"
            hosts:
              - 'app-{{ .CICD_REPO_NAME }}.{{ .CLUSTER_NAME }}.{{ .ORG_NAME }}.{{ .DOMAIN_NAME }}'
          {{{{ else }}}}
          service:
            type: LoadBalancer
          {{{{- end }}}}

        mysql:
          {{{{- if .pipeline.install_mysql_root_password_secret.clusterSecret.sourceSecretName }}}}
          existingSecret: '{{ .CICD_REPO_NAME }}-mysql-root-password'
          {{{{- end }}}}
          existingUserSecret: '{{ .CICD_REPO_NAME }}-mysql-user'
          metrics:
            enabled: true
