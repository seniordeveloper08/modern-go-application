openapi: 3.0.0

info:
    title: Todo API
    description: Manage TODOs
    version: 1.0.0

servers:
    -   url: https://todo.api/
    -   url: http://todo.api/

paths:
    /todos:
        post:
            summary: Add a new TODO to the list
            description: ""
            operationId: createTodo
            requestBody:
                $ref: "#/components/requestBodies/CreateTodoRequest"
            responses:
                "201":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Todo"
                "400":
                    description: invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"
                "500":
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"

        get:
            summary: List TODOs
            description: ""
            operationId: listTodos
            responses:
                "201":
                    description: created
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TodoList"
                "500":
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"

        delete:
            summary: Delete all items
            description: ""
            operationId: deleteAllItems
            tags:
                - todos
            responses:
                "204":
                    description: successful operation
                "500":
                    description: unexpected error
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/GenericError"

    "/todos/{id}":
        parameters:
            -   in: path
                name: id
                required: true
                description: Numeric ID of the TODO
                schema:
                    type: integer

        get:
            summary: Get an item
            description: ""
            operationId: getItem
            tags:
                - todos
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Todo"
                "404":
                    description: not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"
                "500":
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"

        patch:
            summary: Update an item
            description: ""
            operationId: updateItem
            tags:
                - todos
            requestBody:
                $ref: "#/components/requestBodies/UpdateTodoRequest"
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Todo"
                "404":
                    description: not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"
                "500":
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"

        delete:
            summary: Delete an item
            description: ""
            operationId: deleteItem
            tags:
                - todos
            responses:
                "204":
                    description: successful operation
                "500":
                    description: unexpected error
                    content:
                        "*/*":
                            schema:
                                $ref: "#/components/schemas/GenericError"

    "/todos/{id}/complete":
        patch:
            summary: Mark a TODO as complete
            description: ""
            operationId: markAsComplete
            parameters:
                -   in: path
                    name: id
                    required: true
                    description: Numeric ID of the TODO
                    schema:
                        type: integer
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CreateTodoResponse"
                "404":
                    description: not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"
                "500":
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GenericError"

components:
    requestBodies:
        CreateTodoRequest:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/CreateTodoRequest"
            required: true

        UpdateTodoRequest:
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/UpdateTodoRequest"
            required: true

    securitySchemes:
        api_key:
            type: apiKey
            name: api_key
            in: header

    schemas:
        Todo:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                completed:
                    type: boolean
                url:
                    type: string
                    format: uri
            required:
                - id
                - title
                - completed
                - url

        TodoList:
            type: array
            items:
                $ref: "#/components/schemas/Todo"

        CreateTodoRequest:
            type: object
            properties:
                title:
                    type: string
            required:
                - title

        CreateTodoResponse:
            type: object
            properties:
                id:
                    type: string
            required:
                - id

        UpdateTodoRequest:
            type: object
            properties:
                title:
                    type: string
                    nullable: true
                completed:
                    type: boolean
                    nullable: true

        GenericError:
            type: object
            properties:
                type:
                    type: string
                title:
                    type: string
                status:
                    type: integer
                detail:
                    type: string
                instance:
                    type: string
            required:
                - type
            example:
                type: about:blank
                title: Not Found
                status: 404
